#! /bin/bash
#./bin/server > /var/log/s4t-iotronic.log &

#/usr/local/lib/node_modules/node-reverse-wstunnel/bin/wstt.js -r -s 8080 &> /var/log/node-reverse-wstunnel &

#export PATH=/bin:/sbin:/usr/bin:/usr/sbin:/opt/usr/bin
#export NODE_PATH=/usr/local/lib/node_modules:$NODE_PATH

NAME=s4t-iotronic


FOLDER=$NODE_PATH/iotronic-standalone
DAEMON=$NODE_PATH/iotronic-standalone/bin/server

DESC=s4t-iotronic
LOGFILE="/var/log/iotronic/s4t-iotronic.log"
PIDFILE="/var/run/s4t-iotronic.pid"



FOLDER2=$NODE_PATH/iotronic-standalone/node_modules/node-reverse-wstunnel
DAEMON2=$NODE_PATH/iotronic-standalone/node_modules/node-reverse-wstunnel/bin/wstt.js
DAEMON2_OPTS='-r -s 8080'
DESC2=wstt
LOGFILE2="/var/log/iotronic/wstt.log"
PIDFILE2="/var/run/wstt.pid"



test -x $DAEMON || exit 0
set -e

. /lib/lsb/init-functions

MYPID=`ps www | grep $NODE_PATH/iotronic-standalone/bin/server | grep -v grep | awk {'print $1'}`
MYPID2=`ps www | grep $NODE_PATH/iotronic-standalone/node_modules/node-reverse-wstunnel/bin/wstt.js | grep -v grep | awk {'print $1'}`


case "$1" in
        start)
		#IOTRONIC-STANDALONE
                echo -e "Starting $DESC ..."

		#IF empty...
		if [[ -z $MYPID ]];
		then
			start-stop-daemon --start -d $FOLDER --quiet --make-pidfile --pidfile $PIDFILE --exec $DAEMON >> /dev/null & # ${LOGFILE} &
		elif [[ -s $PIDFILE && `cat $PIDFILE` == $MYPID ]];
		then
			echo -e "Already started!"

		else
			echo $MYPID > $PIDFILE
			echo -e "Already started!"
		fi



		#WSTT
		echo -e "Starting $DESC2 ..."

		#IF empty...
		if [[ -z $MYPID2 ]];
		then
			start-stop-daemon --start -d $FOLDER2 --quiet --make-pidfile --pidfile $PIDFILE2 --exec $DAEMON2 -- $DAEMON2_OPTS >> /dev/null & # ${LOGFILE} &
		elif [[ -s $PIDFILE2 && `cat $PIDFILE2` == $MYPID2 ]];
		then
			echo -e "Already started!"
		else
			echo $MYPID2 > $PIDFILE2
			echo -e "Already started!"
		fi

                ;;


        stop)

		#IOTRONIC-STANDALONE
                echo -e "Stopping $DESC ..."
		if [[ -s $PIDFILE && `cat $PIDFILE` == $MYPID ]];
		then
	                kill -9 `cat $PIDFILE`
			rm $PIDFILE
		else
			echo -e "inactive!"
		fi

		#WSTT
		echo -e "Stopping $DESC2 ..."
		if [[ -s $PIDFILE2 && `cat $PIDFILE2` == $MYPID2 ]];
		then
			kill -9 `cat $PIDFILE2`
			rm $PIDFILE2
		else
			echo -e "inactive!"
		fi
                ;;


        restart)

		#IOTRONIC-STANDALONE
                echo -e "Restarting $DESC ..."
		if [[ -s $PIDFILE && `cat $PIDFILE` == $MYPID ]];
		then
	                kill -9 `cat $PIDFILE`
			rm $PIDFILE
		fi
                sleep 1
                #start-stop-daemon --start -d $FOLDER --quiet --make-pidfile --pidfile $PIDFILE --exec $DAEMON >> ${LOGFILE} 2>&1   || true &
		start-stop-daemon --start -d $FOLDER --quiet --make-pidfile --pidfile $PIDFILE --exec $DAEMON >> /dev/null & #  ${LOGFILE} &

		#WSTT
		echo -e "Restarting $DESC2 ..."
		if [[ -s $PIDFILE2 && `cat $PIDFILE2` == $MYPID2 ]];
		then
			kill -9 `ps aux | grep wstt | grep -v grep | awk {'print $2'}`
			rm $PIDFILE2
		fi
		sleep 1
		start-stop-daemon --start -d $FOLDER2 --quiet --make-pidfile --pidfile $PIDFILE2 --exec $DAEMON2 -- $DAEMON2_OPTS >> /dev/null & # ${LOGFILE} &

                ;;


        status)

		#IOTRONIC-STANDALONE
                echo -e "$DESC status..."
		if [[ -z $MYPID ]];
		then
			echo -e "inactive!"
		else
	                echo -e "PID: "`cat $PIDFILE`
		fi

		#WSTT
		echo -e "$DESC2 status..."
		if [[ -z $MYPID2 ]];
		then
			echo -e "inactive!"
		else
			echo -e "PID: "`cat $PIDFILE2`
		fi

                ;;

        *)
                N=/etc/init.d/$NAME
                echo "Usage: $N {start|stop|restart|status}" >&2
                exit 1
                ;;
esac

exit 0
